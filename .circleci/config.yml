version: 2

# VM environment. Includes docker.
integrationDefaults: &integrationDefaults
  machine:
    image: ubuntu-1604:201903-01
  environment:
    - CHANGE_MINIKUBE_NONE_USER: true
    - SKIP_CLEANUP: true
    - KUBECONFIG: /go/out/minikube.conf
    - TEST_ENV: minikube-none


# Common procedure to initialize working directory
initWorkingDir: &initWorkingDir
  type: shell
  name: Initialize Working Directory
  pwd: /
  command: |
    sudo mkdir -p /istio/bin
    sudo chown -R $USER /istio
    cd /istio/bin
    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    chmod +x ./kubectl

# Environment:
#  by default runs in /home/circleci/project, and checkout is in current directory
#  ID is circleci(3434)

jobs:
  # TODO: add encrypted creds for real clusters, push to real clusters
  # TODO: add a Makefile to automate
  build:
    docker:
      - image: istio/ci:go1.11-k8s1.10.4-helm2.7.2-minikube0.25
        environment:
          GOPATH: /home/circleci/project/go
          KUBECONFIG: /home/circleci/project/.circleci/config

    # Can run multiple images, first is primary, all use localhost
    #resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: main
          command: |
            pwd
            id
            env
            mkdir -p out/tests
            echo "Hello" > out/tests/hello
            go get -u sigs.k8s.io/kind
            $GOPATH/bin/kind create cluster

            # Option 1: use the kind docker to install stuff.
            # We can copy our installer in the kind cluster
            docker cp $HOME/project kind-control-plane:/
            cat  $HOME/.kube/kind-config-kind | sed s/localhost:.*/localhost:6443/ > $HOME/.kube/config
            docker cp $HOME/.kube/config kind-control-plane:/

            # TODO: we can exec into the kind cluster and run 'stuff', but we don't have helm.
            # Will need to run a pod - so need to create a pod with the installer and helm and kubectl

            # TODO: for multi-cluster, we can create a second kind
            # docker run --volumes-from configs --network container:kind-control-plane istio/ci:go1.11-k8s1.10.4-helm2.7.2-minikube0.25 make control

            # TODO: option 3 is to run DIND as the main image - this is likely the fastest

      - store_test_results:
          path: out/tests
      - store_artifacts:
          path: out/tests

  install-minikube:
    <<: *integrationDefaults
    environment:
            - KUBECONFIG: /go/out/minikube.conf
            - TEST_ENV: minikube-none
    steps:
      - <<: *initWorkingDir
      - checkout
      - run: bin/testEnvRootMinikube.sh start
      - run: bin/testEnvRootMinikube.sh wait
      - run: 
          command: |
            export PATH=/istio/bin:$PATH
            WAIT_TIMEOUT=10m bin/install.sh
      - run:
          command: |
            mkdir -p $GOPATH/src/istio.io/
            git clone https://github.com/istio/istio.git $GOPATH/src/istio.io/istio
            bin/test.sh $GOPATH/src/istio.io/istio
      - store_artifacts:
          path: /home/circleci/logs
      - store_artifacts:
          path: /tmp
      - store_artifacts:
          path: /var/lib/localkube/
      - store_test_results:
          path: /go/out/tests

  modular-installation:
    <<: *integrationDefaults
    environment:
            - KUBECONFIG: /go/out/minikube.conf
            - TEST_ENV: minikube-none
    steps:
      - <<: *initWorkingDir
      - checkout
      - run: bin/testEnvRootMinikube.sh start
      - run: bin/testEnvRootMinikube.sh wait
      - run:
          command: |
            export PATH=/istio/bin:$PATH
            WAIT_TIMEOUT=10m bin/install.sh install_crds
      - run: 
          command: |
            export PATH=/istio/bin:$PATH
            WAIT_TIMEOUT=10m bin/install.sh install_system
      - run:
          command: |
            export PATH=/istio/bin:$PATH
            WAIT_TIMEOUT=10m bin/install.sh install_control
      - run:
          command: |
            export PATH=/istio/bin:$PATH
            WAIT_TIMEOUT=10m bin/install.sh install_ingress
      - run:
          command: |
            export PATH=/istio/bin:$PATH
            mkdir -p $GOPATH/src/istio.io/
            git clone https://github.com/istio/istio.git $GOPATH/src/istio.io/istio
            WAIT_TIMEOUT=5m bin/test.sh $GOPATH/src/istio.io/istio     
      - store_artifacts:
          path: /home/circleci/logs
      - store_artifacts:
          path: /tmp
      - store_artifacts:
          path: /var/lib/localkube/
      - store_test_results:
          path: /go/out/tests

workflows:
  version: 2
  nightly:
    triggers:
       - schedule:
           cron: "0 0 * * *"
           filters:
             branches:
               only:
                 - master
                 - dev
    jobs:
      - build
      - install-minikube
      - modular-installation

  all:
    jobs:
#      - install-minikube
      - modular-installation
